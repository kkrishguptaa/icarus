name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  changelog:
    name: Changelog
    runs-on: ubuntu-latest

    outputs:
      skipped: ${{ steps.changelog.outputs.skipped }}
      tag: ${{ steps.changelog.outputs.tag }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}
      version: ${{ steps.changelog.outputs.version }}

    env:
      PR_BRANCH: release-ci-${{ github.sha }}

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Create Branch
        run: |
          git checkout -b ${{ env.PR_BRANCH }}

      - name: Create Changelog
        uses: TriPSs/conventional-changelog-action@3c4970b6573374889b897403d2f1278c395ea0df # v5
        id: changelog
        with:
          git-user-name: "github-actions[bot]"
          git-user-email: "github-actions[bot]@users.noreply.github.com"
          git-branch: ${{ env.PR_BRANCH }}
          skip-git-pull: true
          output-file: false
          create-summary: true

      - name: Create Changelog PR
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr create --base main --head ${{ env.PR_BRANCH }} --title 'chore(release): ${{ steps.changelog.outputs.tag }} [skip-ci]' --body '${{ steps.changelog.outputs.clean_changelog }}'
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Merge Changelog PR
        if: steps.changelog.outputs.skipped == 'false'
        run: |
          gh pr merge --squash --delete-branch ${{ env.PR_BRANCH }}
        env:
          GH_TOKEN: ${{ github.token }}

  release:
    name: Release
    needs: changelog
    if: needs.changelog.outputs.skipped == 'false'
    runs-on: ubuntu-latest

    environment:
      name: itch
      url: ${{ steps.itchio.conclusion == 'success' && 'https://kkrishguptaa.itch.io/icarus' }}

    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version-file: .bun-version

      - name: Build
        run: |
          bun install --frozen-lockfile
          bun run build
          zip -r ${{ needs.changelog.outputs.tag }}.zip dist

      - name: Setup butler
        run: |
          curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default
          unzip butler.zip
          chmod +x ./butler
          ./butler -V

      - name: Push to itch.io
        id: itchio
        run: |
          ./butler push dist kkrishguptaa/icarus:default --userversion ${{ needs.changelog.outputs.tag }} --if-changed
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}

      - name: Create Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 # v1
        with:
          tag_name: ${{ needs.changelog.outputs.tag }}
          prerelease: false
          draft: true
          generate_release_notes: false
          name: ${{ needs.changelog.outputs.tag }}
          body: ${{ needs.changelog.outputs.clean_changelog }}
          files: ${{ needs.changelog.outputs.tag }}.zip

  deploy:
    name: Deploy
    needs: [changelog, release]
    if: needs.changelog.outputs.skipped == 'false'
    runs-on: ubuntu-latest

    environment:
      name: cloudflare-pages
      url: ${{ steps.wrangler.outputs.deployment-url && 'https://icarus.krishg.com' }}

    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@735343b667d3e6f658f44d0eca948eb6282f2b76 # v2
        with:
          bun-version-file: .bun-version

      - name: Build Website
        run: |
          bun install --frozen-lockfile
          bun run build

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@da0e0dfe58b7a431659754fdf3f186c529afbe65 # v3
        id: wrangler
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: "pages deploy"
